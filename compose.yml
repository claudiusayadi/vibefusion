name: vibefusion
services:
  vibefusion-api:
    container_name: vibefusion-api
    image: ghcr.io/claudiusayadi/vibefusion-api:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - API_PORT=${API_PORT}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - TMDB_MOVIE_SEARCH_URL=${TMDB_MOVIE_SEARCH_URL}
      - TMDB_MOVIE_VIDEOS_URL=${TMDB_MOVIE_VIDEOS_URL}
      - TMDB_POSTER_URL=${TMDB_POSTER_URL}
      - TMDB_BACKDROP_URL=${TMDB_BACKDROP_URL}
      - TMDB_VIDEO_URL=${TMDB_VIDEO_URL}
      - AI_API_KEY=${AI_API_KEY}
      - AI_MODEL=${AI_MODEL}
    # volumes:
    #   - ~/docker/appdata/vibefusion/api:/api
    labels:
      - traefik.enable=true
      - traefik.http.routers.vibefusion.rule=Host(`vibefusion.dovely.tech`) && PathPrefix(`/api`)
      - traefik.http.routers.vibefusion.tls=true
      - traefik.http.routers.vibefusion.entrypoints=live
      - traefik.http.routers.vibefusion.tls.certresolver=myresolver
      - traefik.http.services.vibefusion.loadbalancer.server.port=3001
    networks:
      - proxy

  vibefusion-app:
    container_name: vibefusion-app
    image: ghcr.io/claudiusayadi/vibefusion-app:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${APP_PORT}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    # volumes:
    #   - ~/docker/appdata/vibefusion/app:/usr/src/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.vibefusion.rule=Host(`vibefusion.dovely.tech`)
      - traefik.http.routers.vibefusion.tls=true
      - traefik.http.routers.vibefusion.entrypoints=live
      - traefik.http.routers.vibefusion.tls.certresolver=myresolver
      - traefik.http.services.vibefusion.loadbalancer.server.port=3000
    networks:
      - proxy

networks:
  proxy:
    external: true
